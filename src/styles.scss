
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$poe-checklist-ng-primary: mat-palette($mat-indigo);
$poe-checklist-ng-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$poe-checklist-ng-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$poe-checklist-ng-theme: mat-dark-theme((
  color: (
    primary: $poe-checklist-ng-primary,
    accent: $poe-checklist-ng-accent,
    warn: $poe-checklist-ng-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($poe-checklist-ng-theme);

$theme-colors: (
  //"primary": #c0c0c0,
  "primary_highlight": #dfcf99,
  "primary": #9e926c,
  "secondary": #44442f,
  "unique": rgb(175, 95, 28),
  "unique2": rgb(85, 46, 14),
  "dark-trans-10": rgba(0, 0, 0, 0.9),
  "dark-trans-20": rgba(0, 0, 0, 0.8),
  "dark-trans-50": rgba(0, 0, 0, 0.5),
  "dark-trans-80": rgba(0, 0, 0, 0.2),
  "dark-trans-90": rgba(0, 0, 0, 0.1),
);

$body-color: map-get($theme-colors, primary) !default;
$text-color: map-get($theme-colors, primary) !default;

body{
  background: #000000 url(/assets/bg.jpg) fixed center center;
  //color:#eee;
  //font-size:16px;
  //font-family:Montserrat,Open Sans,Verdana,sans-serif
}
.table-hover tbody tr:hover td
{
  background-color: map-get($theme-colors, dark-trans-10);
}

@import "../node_modules/bootstrap/scss/bootstrap";

//.max-content-height {
//  position: relative;
//  max-height: calc(97% - 4rem - 48px);
//}
///* width */
//::-webkit-scrollbar {
//  width: $spacer * .5;
//}
//
///* Track */
//::-webkit-scrollbar-track {
//  background: map-get($theme-colors, secondary);
//}
//
///* Handle */
//::-webkit-scrollbar-thumb {
//  background: map-get($theme-colors, primary);
//}
//
///* Handle on hover */
//::-webkit-scrollbar-thumb:hover {
//  background: #212529;
//}

input[type=checkbox]{
  box-sizing: border-box;
  line-height: normal;
  background-color: initial;
  border-color: map-get($theme-colors, primary);
  //cursor: default;
}
input[type=checkbox]:checked{
  background-color: initial;
  border-color: map-get($theme-colors, primary);
  text-align: center;
}
input[type=checkbox]:focus {
  outline: none;
  border-color: map-get($theme-colors, primary);
  box-shadow: none;
}
a{color: map-get($theme-colors, primary);}
a:hover{color: map-get($theme-colors, primary_highlight);}
//input[type=checkbox]:checked:after{
//  color: map-get($theme-colors, primary);
//  content: "\2714";
//}
//.form-check-input:checked[type=checkbox] {
//  background-image: none;
//}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
